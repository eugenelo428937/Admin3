# Generated by Django 5.2.2 on 2025-09-11 11:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cart", "0001_initial"),
        ("exam_sessions_subjects_products", "0001_initial"),
        ("marking_vouchers", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="actedorderitem",
            name="product",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="exam_sessions_subjects_products.examsessionsubjectproduct",
            ),
        ),
        migrations.AddField(
            model_name="actedorderpayment",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="payments",
                to="cart.actedorder",
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="cartfee",
            name="cart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fees",
                to="cart.cart",
            ),
        ),
        migrations.AddField(
            model_name="cartitem",
            name="cart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="items",
                to="cart.cart",
            ),
        ),
        migrations.AddField(
            model_name="cartitem",
            name="marking_voucher",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="marking_vouchers.markingvoucher",
            ),
        ),
        migrations.AddField(
            model_name="cartitem",
            name="product",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="exam_sessions_subjects_products.examsessionsubjectproduct",
            ),
        ),
        migrations.AddField(
            model_name="orderuseracknowledgment",
            name="order",
            field=models.ForeignKey(
                help_text="Associated order for this acknowledgment",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_acknowledgments",
                to="cart.actedorder",
            ),
        ),
        migrations.AddConstraint(
            model_name="actedorderitem",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("product__isnull", False),
                    ("marking_voucher__isnull", False),
                    _connector="OR",
                ),
                name="order_item_has_product_or_voucher",
            ),
        ),
        migrations.AddConstraint(
            model_name="actedorderitem",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("product__isnull", False),
                    ("marking_voucher__isnull", False),
                    _negated=True,
                ),
                name="order_item_not_both_product_and_voucher",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="cartfee",
            unique_together={("cart", "fee_type")},
        ),
        migrations.AddConstraint(
            model_name="cartitem",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("product__isnull", False),
                    ("marking_voucher__isnull", False),
                    _connector="OR",
                ),
                name="cart_item_has_product_or_voucher",
            ),
        ),
        migrations.AddConstraint(
            model_name="cartitem",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("product__isnull", False),
                    ("marking_voucher__isnull", False),
                    _negated=True,
                ),
                name="cart_item_not_both_product_and_voucher",
            ),
        ),
        migrations.AddIndex(
            model_name="orderuseracknowledgment",
            index=models.Index(
                fields=["order", "acknowledgment_type"],
                name="acted_order_order_i_35b378_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="orderuseracknowledgment",
            index=models.Index(
                fields=["rule_id"], name="acted_order_rule_id_aa7ebb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderuseracknowledgment",
            index=models.Index(
                fields=["acknowledgment_type"], name="acted_order_acknowl_c605b9_idx"
            ),
        ),
    ]
