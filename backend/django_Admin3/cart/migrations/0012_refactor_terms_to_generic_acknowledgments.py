# Generated by Django 5.2.2 on 2025-08-06 14:02

import django.db.models.deletion
from django.db import migrations, models


def migrate_terms_acceptance_data(apps, schema_editor):
    """Migrate existing ActedOrderTermsAcceptance data to OrderUserAcknowledgment"""
    ActedOrderTermsAcceptance = apps.get_model('cart', 'ActedOrderTermsAcceptance')
    OrderUserAcknowledgment = apps.get_model('cart', 'OrderUserAcknowledgment')
    
    # Migrate each terms acceptance record
    for terms_record in ActedOrderTermsAcceptance.objects.all():
        OrderUserAcknowledgment.objects.create(
            order=terms_record.order,
            acknowledgment_type='terms_conditions',
            title='Terms & Conditions',
            content_summary=f'General Terms & Conditions acceptance (v{terms_record.terms_version})',
            is_accepted=terms_record.general_terms_accepted,
            accepted_at=terms_record.accepted_at,
            ip_address=terms_record.ip_address,
            user_agent=terms_record.user_agent,
            content_version=terms_record.terms_version,
            acknowledgment_data={
                'products': terms_record.product_acknowledgments,
                'general_terms_accepted': terms_record.general_terms_accepted
            },
            rules_engine_context=terms_record.rules_engine_data
        )


def reverse_migrate_terms_acceptance_data(apps, schema_editor):
    """Reverse migration - recreate ActedOrderTermsAcceptance from OrderUserAcknowledgment"""
    ActedOrderTermsAcceptance = apps.get_model('cart', 'ActedOrderTermsAcceptance')
    OrderUserAcknowledgment = apps.get_model('cart', 'OrderUserAcknowledgment')
    
    # Only migrate terms_conditions acknowledgments back
    for ack in OrderUserAcknowledgment.objects.filter(acknowledgment_type='terms_conditions'):
        ActedOrderTermsAcceptance.objects.create(
            order=ack.order,
            general_terms_accepted=ack.acknowledgment_data.get('general_terms_accepted', ack.is_accepted),
            accepted_at=ack.accepted_at,
            ip_address=ack.ip_address,
            user_agent=ack.user_agent,
            terms_version=ack.content_version,
            product_acknowledgments=ack.acknowledgment_data.get('products', {}),
            rules_engine_data=ack.rules_engine_context
        )


class Migration(migrations.Migration):

    dependencies = [
        ("cart", "0011_add_terms_acceptance_model"),
    ]

    operations = [
        migrations.CreateModel(
            name="OrderUserAcknowledgment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "acknowledgment_type",
                    models.CharField(
                        choices=[
                            ("terms_conditions", "Terms & Conditions"),
                            ("product_specific", "Product-Specific Acknowledgment"),
                            ("deadline_expired", "Expired Deadline Acknowledgment"),
                            ("policy_change", "Policy Change Acknowledgment"),
                            ("warning", "Warning Acknowledgment"),
                            ("custom", "Custom Acknowledgment"),
                        ],
                        help_text="Type of acknowledgment required",
                        max_length=50,
                    ),
                ),
                (
                    "rule_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="ID of the rule that triggered this acknowledgment",
                        null=True,
                    ),
                ),
                (
                    "template_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="ID of the message template used for this acknowledgment",
                        null=True,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title/subject of the acknowledgment", max_length=255
                    ),
                ),
                (
                    "content_summary",
                    models.TextField(
                        help_text="Brief summary of what was acknowledged"
                    ),
                ),
                (
                    "is_accepted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether user accepted/acknowledged this requirement",
                    ),
                ),
                (
                    "accepted_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when acknowledgment was made",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address of user who made the acknowledgment",
                        null=True,
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="User agent string of browser used to make acknowledgment",
                    ),
                ),
                (
                    "content_version",
                    models.CharField(
                        default="1.0",
                        help_text="Version of content that was acknowledged",
                        max_length=20,
                    ),
                ),
                (
                    "acknowledgment_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Structured data related to this acknowledgment (product IDs, specific conditions, etc.)",
                    ),
                ),
                (
                    "rules_engine_context",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Context data from rules engine evaluation that triggered this acknowledgment",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Associated order for this acknowledgment",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_acknowledgments",
                        to="cart.actedorder",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order User Acknowledgment",
                "verbose_name_plural": "Order User Acknowledgments",
                "db_table": "order_user_acknowledgments",
                "ordering": ["-accepted_at"],
            },
        ),
        # Migrate existing data before deleting the old model
        migrations.RunPython(
            migrate_terms_acceptance_data, 
            reverse_migrate_terms_acceptance_data
        ),
        migrations.DeleteModel(
            name="ActedOrderTermsAcceptance",
        ),
        migrations.AddIndex(
            model_name="orderuseracknowledgment",
            index=models.Index(
                fields=["order", "acknowledgment_type"],
                name="order_user__order_i_1d56bf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="orderuseracknowledgment",
            index=models.Index(
                fields=["rule_id"], name="order_user__rule_id_c66e23_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderuseracknowledgment",
            index=models.Index(
                fields=["acknowledgment_type"], name="order_user__acknowl_4b2cc4_idx"
            ),
        ),
    ]
