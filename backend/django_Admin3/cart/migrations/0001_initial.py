# Generated by Django 5.2.2 on 2025-09-11 11:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("marking_vouchers", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ActedOrderPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("card", "Credit/Debit Card"),
                            ("invoice", "Invoice"),
                            ("bank_transfer", "Bank Transfer"),
                        ],
                        default="card",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, help_text="Payment amount", max_digits=10
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="GBP", help_text="Payment currency", max_length=3
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        blank=True,
                        help_text="Opayo transaction ID",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "client_ip",
                    models.GenericIPAddressField(
                        blank=True, help_text="Client IP address", null=True
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True, help_text="User agent string", null=True
                    ),
                ),
                (
                    "opayo_response",
                    models.JSONField(
                        blank=True, default=dict, help_text="Full Opayo API response"
                    ),
                ),
                (
                    "opayo_status_code",
                    models.CharField(
                        blank=True,
                        help_text="Opayo status code",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "opayo_status_detail",
                    models.CharField(
                        blank=True,
                        help_text="Opayo status detail",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Error message if payment failed",
                        null=True,
                    ),
                ),
                (
                    "error_code",
                    models.CharField(
                        blank=True,
                        help_text="Error code if payment failed",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True, help_text="When payment was processed", null=True
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional payment metadata",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Payment",
                "verbose_name_plural": "Order Payments",
                "db_table": "acted_order_payments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_key",
                    models.CharField(blank=True, max_length=40, null=True, unique=True),
                ),
                (
                    "has_marking",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if cart contains marking products",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Cart",
                "verbose_name_plural": "Carts",
                "db_table": "acted_carts",
                "ordering": ["updated_at"],
            },
        ),
        migrations.CreateModel(
            name="CartFee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fee_type",
                    models.CharField(
                        choices=[
                            ("tutorial_booking_fee", "Tutorial Booking Fee"),
                            ("service_charge", "Service Charge"),
                            ("processing_fee", "Processing Fee"),
                            ("convenience_fee", "Convenience Fee"),
                        ],
                        max_length=50,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="GBP", max_length=3)),
                ("is_refundable", models.BooleanField(default=False)),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
                (
                    "applied_by_rule",
                    models.IntegerField(
                        blank=True, help_text="Rule ID that applied this fee", null=True
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "verbose_name": "Cart Fee",
                "verbose_name_plural": "Cart Fees",
                "db_table": "acted_cart_fees",
            },
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("product", "Product"),
                            ("marking_voucher", "Marking Voucher"),
                        ],
                        default="product",
                        max_length=20,
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("price_type", models.CharField(default="standard", max_length=20)),
                (
                    "actual_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "has_expired_deadline",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if marking product has expired deadlines",
                    ),
                ),
                (
                    "is_marking",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this is a marking product",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional product-specific data (e.g., tutorial choices, variation IDs)",
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Cart Item",
                "verbose_name_plural": "Cart Items",
                "db_table": "acted_cart_items",
                "ordering": ["added_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderUserAcknowledgment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "acknowledgment_type",
                    models.CharField(
                        choices=[
                            ("terms_conditions", "Terms & Conditions"),
                            ("product_specific", "Product-Specific Acknowledgment"),
                            ("deadline_expired", "Expired Deadline Acknowledgment"),
                            ("policy_change", "Policy Change Acknowledgment"),
                            ("warning", "Warning Acknowledgment"),
                            ("custom", "Custom Acknowledgment"),
                        ],
                        help_text="Type of acknowledgment required",
                        max_length=50,
                    ),
                ),
                (
                    "rule_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="ID of the rule that triggered this acknowledgment",
                        null=True,
                    ),
                ),
                (
                    "template_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="ID of the message template used for this acknowledgment",
                        null=True,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title/subject of the acknowledgment", max_length=255
                    ),
                ),
                (
                    "content_summary",
                    models.TextField(
                        help_text="Brief summary of what was acknowledged"
                    ),
                ),
                (
                    "is_accepted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether user accepted/acknowledged this requirement",
                    ),
                ),
                (
                    "accepted_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when acknowledgment was made",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address of user who made the acknowledgment",
                        null=True,
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="User agent string of browser used to make acknowledgment",
                    ),
                ),
                (
                    "content_version",
                    models.CharField(
                        default="1.0",
                        help_text="Version of content that was acknowledged",
                        max_length=20,
                    ),
                ),
                (
                    "acknowledgment_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Structured data related to this acknowledgment (product IDs, specific conditions, etc.)",
                    ),
                ),
                (
                    "rules_engine_context",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Context data from rules engine evaluation that triggered this acknowledgment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order User Acknowledgment",
                "verbose_name_plural": "Order User Acknowledgments",
                "db_table": "acted_order_user_acknowledgments",
                "ordering": ["-accepted_at"],
            },
        ),
        migrations.CreateModel(
            name="ActedOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Total before VAT and fees",
                        max_digits=10,
                    ),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Total VAT amount",
                        max_digits=10,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Final total including VAT",
                        max_digits=10,
                    ),
                ),
                (
                    "vat_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="VAT rate applied (e.g., 0.2000 for 20%)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "vat_country",
                    models.CharField(
                        blank=True,
                        help_text="Country code for VAT calculation",
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "vat_calculation_type",
                    models.CharField(
                        blank=True,
                        help_text="Type of VAT calculation used",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "calculations_applied",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="All rule engine calculations applied to this order",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
                "db_table": "acted_orders",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ActedOrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("product", "Product"),
                            ("marking_voucher", "Marking Voucher"),
                        ],
                        default="product",
                        max_length=20,
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("price_type", models.CharField(default="standard", max_length=20)),
                (
                    "actual_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "net_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Amount before VAT",
                        max_digits=10,
                    ),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="VAT amount for this item",
                        max_digits=10,
                    ),
                ),
                (
                    "gross_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Total amount including VAT",
                        max_digits=10,
                    ),
                ),
                (
                    "vat_rate",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        help_text="VAT rate applied to this item",
                        max_digits=5,
                    ),
                ),
                (
                    "is_vat_exempt",
                    models.BooleanField(
                        default=False, help_text="Whether this item is exempt from VAT"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional product-specific data (e.g., tutorial choices, variation IDs)",
                    ),
                ),
                (
                    "marking_voucher",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marking_vouchers.markingvoucher",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="cart.actedorder",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Item",
                "verbose_name_plural": "Order Items",
                "db_table": "acted_order_items",
            },
        ),
    ]
