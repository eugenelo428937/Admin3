# Generated by Django 5.2.2 on 2025-08-25 02:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("rules_engine", "0015_create_jsonb_rules_model"),
    ]

    operations = [
        # Rename old tables that exist to have proper acted_ prefix and rename old execution table
        migrations.RunSQL(
            [
                "ALTER TABLE rules_engine_rules_fields RENAME TO acted_rules_fields;",
                "ALTER TABLE rules_engine_rule RENAME TO acted_rules_engine;", 
                "ALTER TABLE rules_engine_execution RENAME TO acted_rule_executions_new;",
                "ALTER TABLE acted_rule_executions RENAME TO acted_rule_executions_legacy;",
                "ALTER TABLE acted_rule_executions_new RENAME TO acted_rule_executions;"
            ],
            reverse_sql=[
                "ALTER TABLE acted_rule_executions RENAME TO acted_rule_executions_new;",
                "ALTER TABLE acted_rule_executions_legacy RENAME TO acted_rule_executions;",
                "ALTER TABLE acted_rule_executions_new RENAME TO rules_engine_execution;",
                "ALTER TABLE acted_rules_engine RENAME TO rules_engine_rule;",
                "ALTER TABLE acted_rules_fields RENAME TO rules_engine_rules_fields;"
            ]
        ),
        
        # Drop old indexes that might conflict and add new ones
        migrations.RunSQL(
            [
                "DROP INDEX IF EXISTS rules_entry_active_priority;",
                "DROP INDEX IF EXISTS rules_rule_id;", 
                "DROP INDEX IF EXISTS rules_active_entry;",
                "DROP INDEX IF EXISTS executions_rule_created;",
                "DROP INDEX IF EXISTS executions_entry_created;",
                "DROP INDEX IF EXISTS executions_outcome_created;",
            ],
            reverse_sql=[]
        ),
        
        # Create new indexes with proper names
        migrations.RunSQL(
            [
                "CREATE INDEX acted_rules_entry_active ON acted_rules_engine (entry_point, active, priority);",
                "CREATE INDEX acted_rules_rule_id ON acted_rules_engine (rule_id);",
                "CREATE INDEX acted_rules_active_ent ON acted_rules_engine (active, entry_point);",
                "CREATE INDEX acted_exec_rule_created ON acted_rule_executions (rule_id, created_at);",
                "CREATE INDEX acted_exec_entry_created ON acted_rule_executions (entry_point, created_at);", 
                "CREATE INDEX acted_exec_outcome_crtd ON acted_rule_executions (outcome, created_at);",
            ],
            reverse_sql=[
                "DROP INDEX IF EXISTS acted_exec_outcome_crtd;",
                "DROP INDEX IF EXISTS acted_exec_entry_created;",
                "DROP INDEX IF EXISTS acted_exec_rule_created;",
                "DROP INDEX IF EXISTS acted_rules_active_ent;",
                "DROP INDEX IF EXISTS acted_rules_rule_id;",
                "DROP INDEX IF EXISTS acted_rules_entry_active;",
            ]
        ),
    ]
