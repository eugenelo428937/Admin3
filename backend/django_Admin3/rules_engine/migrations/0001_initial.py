# Generated by Django 5.2.2 on 2025-06-12 16:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MessageTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("success", "Success"),
                            ("terms", "Terms & Conditions"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "variables",
                    models.JSONField(
                        default=list,
                        help_text="List of variable names used in template",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Message Template",
                "verbose_name_plural": "Message Templates",
                "db_table": "rules_message_templates",
            },
        ),
        migrations.CreateModel(
            name="Rule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[
                            ("cart_add", "Add to Cart"),
                            ("checkout_start", "Checkout Start"),
                            ("checkout_confirm", "Checkout Confirm"),
                            ("product_view", "Product View"),
                            ("login", "User Login"),
                            ("registration", "User Registration"),
                            ("order_complete", "Order Complete"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=100, help_text="Lower numbers = higher priority"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_blocking",
                    models.BooleanField(
                        default=False,
                        help_text="If true, user must acknowledge before proceeding",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Rule",
                "verbose_name_plural": "Rules",
                "db_table": "rules_rules",
                "ordering": ["priority", "id"],
            },
        ),
        migrations.CreateModel(
            name="HolidayCalendar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("date", models.DateField()),
                (
                    "country",
                    models.CharField(
                        default="GB", help_text="ISO country code", max_length=2
                    ),
                ),
                ("is_business_day", models.BooleanField(default=False)),
                (
                    "delivery_delay_days",
                    models.IntegerField(
                        default=0,
                        help_text="Additional delivery delay for this holiday",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Holiday",
                "verbose_name_plural": "Holiday Calendar",
                "db_table": "rules_holiday_calendar",
                "unique_together": {("date", "country")},
            },
        ),
        migrations.CreateModel(
            name="RuleAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("show_message", "Show Message"),
                            ("require_acknowledgment", "Require Acknowledgment"),
                            ("redirect", "Redirect"),
                            ("send_email", "Send Email"),
                            ("log_event", "Log Event"),
                            ("custom_function", "Custom Function"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        default=dict, help_text="Additional parameters for the action"
                    ),
                ),
                ("execution_order", models.IntegerField(default=1)),
                (
                    "message_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rules_engine.messagetemplate",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        to="rules_engine.rule",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rule Action",
                "verbose_name_plural": "Rule Actions",
                "db_table": "rules_rule_actions",
                "ordering": ["execution_order"],
            },
        ),
        migrations.CreateModel(
            name="RuleCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "condition_type",
                    models.CharField(
                        choices=[
                            ("product_category", "Product Category"),
                            ("product_code", "Product Code"),
                            ("product_type", "Product Type"),
                            ("user_type", "User Type"),
                            ("date_range", "Date Range"),
                            ("holiday_proximity", "Holiday Proximity"),
                            ("cart_value", "Cart Value"),
                            ("cart_item_count", "Cart Item Count"),
                            ("user_order_history", "User Order History"),
                            ("custom_field", "Custom Field"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "field_name",
                    models.CharField(
                        help_text="Field to evaluate (e.g., 'product.type', 'user.email')",
                        max_length=100,
                    ),
                ),
                (
                    "operator",
                    models.CharField(
                        choices=[
                            ("equals", "Equals"),
                            ("not_equals", "Not Equals"),
                            ("contains", "Contains"),
                            ("not_contains", "Does Not Contain"),
                            ("greater_than", "Greater Than"),
                            ("less_than", "Less Than"),
                            ("between", "Between"),
                            ("in_list", "In List"),
                            ("not_in_list", "Not In List"),
                            ("regex", "Regular Expression"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "value",
                    models.TextField(
                        help_text="Value to compare against (can be JSON for complex values)"
                    ),
                ),
                (
                    "is_negated",
                    models.BooleanField(
                        default=False, help_text="Negate the condition result"
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conditions",
                        to="rules_engine.rule",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rule Condition",
                "verbose_name_plural": "Rule Conditions",
                "db_table": "rules_rule_conditions",
            },
        ),
        migrations.CreateModel(
            name="RuleExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("trigger_context", models.JSONField(default=dict)),
                ("conditions_met", models.BooleanField()),
                ("actions_executed", models.JSONField(default=list)),
                ("execution_time", models.DateTimeField(auto_now_add=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rules_engine.rule",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Rule Execution",
                "verbose_name_plural": "Rule Executions",
                "db_table": "rules_rule_executions",
            },
        ),
        migrations.CreateModel(
            name="UserAcknowledgment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("acknowledged_at", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "message_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rules_engine.messagetemplate",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rules_engine.rule",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Acknowledgment",
                "verbose_name_plural": "User Acknowledgments",
                "db_table": "rules_user_acknowledgments",
                "unique_together": {("user", "rule", "message_template")},
            },
        ),
    ]
