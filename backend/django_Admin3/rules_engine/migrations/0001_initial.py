# Generated by Django 5.2.2 on 2025-09-12 09:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ActedRulesFields",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fields_id",
                    models.CharField(
                        help_text="Unique identifier for the schema",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Human-readable schema name", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of this schema"
                    ),
                ),
                (
                    "schema",
                    models.JSONField(
                        help_text="JSON Schema definition for context validation"
                    ),
                ),
                (
                    "version",
                    models.IntegerField(default=1, help_text="Schema version number"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this schema is active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Acted Rules Fields Schema",
                "verbose_name_plural": "Acted Rules Fields Schemas",
                "db_table": "acted_rules_fields",
                "ordering": ["name"],
            },
        ),
        # migrations.CreateModel(
        #     name="ContentStyleTheme",
        #     fields=[
        #         (
        #             "id",
        #             models.BigAutoField(
        #                 auto_created=True,
        #                 primary_key=True,
        #                 serialize=False,
        #                 verbose_name="ID",
        #             ),
        #         ),
        #         ("name", models.CharField(max_length=50, unique=True)),
        #         ("description", models.TextField(blank=True)),
        #         ("is_active", models.BooleanField(default=True)),
        #         ("created_at", models.DateTimeField(auto_now_add=True)),
        #     ],
        #     options={
        #         "verbose_name": "Content Style Theme",
        #         "verbose_name_plural": "Content Style Themes",
        #         "db_table": "acted_content_style_themes",
        #     },
        # ),
        migrations.CreateModel(
            name="MessageTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "content_format",
                    models.CharField(
                        choices=[
                            ("html", "HTML Content"),
                            ("json", "JSON Structure"),
                            ("markdown", "Markdown"),
                        ],
                        default="html",
                        help_text="Format of the content field",
                        max_length=10,
                    ),
                ),
                (
                    "json_content",
                    models.JSONField(
                        blank=True,
                        help_text="Structured JSON content for rendering with Material UI components",
                        null=True,
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("success", "Success"),
                            ("terms", "Terms & Conditions"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "variables",
                    models.JSONField(
                        default=list,
                        help_text="List of variable names used in template",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Message Template",
                "verbose_name_plural": "Message Templates",
                "db_table": "acted_rules_message_templates",
            },
        ),
        migrations.CreateModel(
            name="RuleEntryPoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        choices=[
                            ("home_page_mount", "Home Page Mount"),
                            ("product_list_mount", "Product List Mount"),
                            ("product_card_mount", "Product Card Mount"),
                            ("checkout_start", "Checkout Start"),
                            ("checkout_preference", "Checkout Preference"),
                            ("checkout_terms", "Checkout Terms"),
                            ("checkout_payment", "Checkout Payment"),
                            ("user_registration", "User Registration"),
                        ],
                        max_length=30,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Rule Entry Point",
                "verbose_name_plural": "Rule Entry Points",
                "db_table": "acted_rule_entry_points",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="ActedRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rule_id",
                    models.CharField(
                        help_text="Unique identifier for the rule",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Human-readable rule name", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of what this rule does"
                    ),
                ),
                (
                    "entry_point",
                    models.CharField(
                        help_text="Entry point code where this rule triggers",
                        max_length=50,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=100, help_text="Lower numbers = higher priority"
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True, help_text="Whether this rule is active"
                    ),
                ),
                (
                    "version",
                    models.IntegerField(default=1, help_text="Rule version number"),
                ),
                (
                    "rules_fields_id",
                    models.CharField(
                        blank=True,
                        help_text="ID of the ActedRulesFields schema for context validation",
                        max_length=100,
                    ),
                ),
                (
                    "condition",
                    models.JSONField(help_text="JSONLogic condition expression"),
                ),
                (
                    "actions",
                    models.JSONField(
                        help_text="Array of actions to execute when condition is true"
                    ),
                ),
                (
                    "stop_processing",
                    models.BooleanField(
                        default=False,
                        help_text="Stop processing other rules if this rule matches",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional metadata about the rule",
                    ),
                ),
                (
                    "active_from",
                    models.DateTimeField(
                        blank=True, help_text="When this rule becomes active", null=True
                    ),
                ),
                (
                    "active_until",
                    models.DateTimeField(
                        blank=True, help_text="When this rule expires", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Acted Rule",
                "verbose_name_plural": "Acted Rules",
                "db_table": "acted_rules",
                "ordering": ["entry_point", "priority", "created_at"],
                "indexes": [
                    models.Index(
                        fields=["entry_point", "active", "priority"],
                        name="acted_rules_entry_active",
                    ),
                    models.Index(fields=["rule_id"], name="acted_rules_rule_id"),
                    models.Index(
                        fields=["active", "entry_point"], name="acted_rules_active_ent"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ActedRuleExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "execution_id",
                    models.CharField(
                        blank=True,
                        help_text="Unique execution identifier",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "rule_id",
                    models.CharField(
                        help_text="ID of the executed rule", max_length=100
                    ),
                ),
                (
                    "entry_point",
                    models.CharField(
                        help_text="Entry point that triggered the rule", max_length=50
                    ),
                ),
                (
                    "context_snapshot",
                    models.JSONField(help_text="Context data at time of execution"),
                ),
                (
                    "condition_result",
                    models.BooleanField(
                        default=False,
                        help_text="Whether rule condition evaluated to true",
                    ),
                ),
                (
                    "actions_executed",
                    models.JSONField(
                        default=list, help_text="List of executed actions"
                    ),
                ),
                (
                    "success",
                    models.BooleanField(
                        default=True, help_text="Whether execution was successful"
                    ),
                ),
                (
                    "actions_result",
                    models.JSONField(
                        blank=True, help_text="Results of action execution", null=True
                    ),
                ),
                (
                    "outcome",
                    models.CharField(
                        blank=True,
                        help_text="Execution outcome (success, blocked, error)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "execution_time_ms",
                    models.FloatField(
                        blank=True,
                        help_text="Execution time in milliseconds",
                        null=True,
                    ),
                ),
                (
                    "condition_evaluation_time_ms",
                    models.FloatField(
                        blank=True,
                        help_text="Time to evaluate condition in milliseconds",
                        null=True,
                    ),
                ),
                (
                    "template_render_time_ms",
                    models.FloatField(
                        blank=True,
                        help_text="Time to render templates in milliseconds",
                        null=True,
                    ),
                ),
                (
                    "action_execution_time_ms",
                    models.FloatField(
                        blank=True,
                        help_text="Time to execute actions in milliseconds",
                        null=True,
                    ),
                ),
                (
                    "total_execution_time_ms",
                    models.FloatField(
                        blank=True,
                        help_text="Total execution time in milliseconds",
                        null=True,
                    ),
                ),
                (
                    "memory_usage_kb",
                    models.FloatField(
                        blank=True, help_text="Memory usage in kilobytes", null=True
                    ),
                ),
                (
                    "context_size_bytes",
                    models.IntegerField(
                        blank=True, help_text="Size of context in bytes", null=True
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if execution failed"
                    ),
                ),
                (
                    "error_details",
                    models.JSONField(
                        blank=True, help_text="Detailed error information", null=True
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, help_text="Additional execution metadata", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Acted Rule Execution",
                "verbose_name_plural": "Acted Rule Executions",
                "db_table": "acted_rule_executions",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["rule_id", "created_at"], name="acted_exec_rule_created"
                    ),
                    models.Index(
                        fields=["entry_point", "created_at"],
                        name="acted_exec_entry_created",
                    ),
                    models.Index(
                        fields=["outcome", "created_at"], name="acted_exec_outcome_crtd"
                    ),
                ],
            },
        ),
        # migrations.CreateModel(
        #     name="ContentStyle",
        #     fields=[
        #         (
        #             "id",
        #             models.BigAutoField(
        #                 auto_created=True,
        #                 primary_key=True,
        #                 serialize=False,
        #                 verbose_name="ID",
        #             ),
        #         ),
        #         (
        #             "name",
        #             models.CharField(
        #                 help_text="Unique name for this style",
        #                 max_length=100,
        #                 unique=True,
        #             ),
        #         ),
        #         (
        #             "element_type",
        #             models.CharField(
        #                 choices=[
        #                     ("container", "Container"),
        #                     ("box", "Box"),
        #                     ("p", "Paragraph"),
        #                     ("h1", "Heading 1"),
        #                     ("h2", "Heading 2"),
        #                     ("h3", "Heading 3"),
        #                     ("h4", "Heading 4"),
        #                     ("h5", "Heading 5"),
        #                     ("h6", "Heading 6"),
        #                     ("ul", "Unordered List"),
        #                     ("ol", "Ordered List"),
        #                     ("li", "List Item"),
        #                 ],
        #                 max_length=20,
        #             ),
        #         ),
        #         (
        #             "category",
        #             models.CharField(
        #                 choices=[
        #                     ("alert", "Alert/Notice"),
        #                     ("warning", "Warning"),
        #                     ("error", "Error"),
        #                     ("success", "Success"),
        #                     ("info", "Information"),
        #                     ("holiday", "Holiday Notice"),
        #                     ("terms", "Terms & Conditions"),
        #                     ("general", "General"),
        #                 ],
        #                 default="general",
        #                 max_length=20,
        #             ),
        #         ),
        #         (
        #             "css_class_selector",
        #             models.CharField(
        #                 blank=True,
        #                 help_text="CSS class that triggers this style (e.g., 'alert alert-warning')",
        #                 max_length=200,
        #             ),
        #         ),
        #         (
        #             "background_color",
        #             models.CharField(
        #                 blank=True,
        #                 help_text="e.g., #fff3cd, rgba(255,243,205,1)",
        #                 max_length=20,
        #             ),
        #         ),
        #         (
        #             "text_color",
        #             models.CharField(
        #                 blank=True, help_text="e.g., #856404, #000000", max_length=20
        #             ),
        #         ),
        #         (
        #             "border_color",
        #             models.CharField(
        #                 blank=True, help_text="e.g., #ffeaa7", max_length=20
        #             ),
        #         ),
        #         (
        #             "border_width",
        #             models.CharField(
        #                 default="1px", help_text="e.g., 1px, 2px, 0", max_length=10
        #             ),
        #         ),
        #         (
        #             "border_radius",
        #             models.CharField(
        #                 default="4px", help_text="e.g., 4px, 8px, 0", max_length=10
        #             ),
        #         ),
        #         (
        #             "padding",
        #             models.CharField(
        #                 default="12px 16px",
        #                 help_text="e.g., 12px 16px, 10px",
        #                 max_length=20,
        #             ),
        #         ),
        #         (
        #             "margin",
        #             models.CharField(
        #                 default="0 0 16px 0",
        #                 help_text="e.g., 0 0 16px 0, 10px",
        #                 max_length=20,
        #             ),
        #         ),
        #         (
        #             "font_size",
        #             models.CharField(
        #                 blank=True,
        #                 help_text="e.g., 14px, 1.2rem, inherit",
        #                 max_length=10,
        #             ),
        #         ),
        #         (
        #             "font_weight",
        #             models.CharField(
        #                 blank=True, help_text="e.g., normal, bold, 600", max_length=10
        #             ),
        #         ),
        #         (
        #             "text_align",
        #             models.CharField(
        #                 default="left",
        #                 help_text="left, center, right, justify",
        #                 max_length=10,
        #             ),
        #         ),
        #         (
        #             "custom_styles",
        #             models.JSONField(
        #                 blank=True,
        #                 default=dict,
        #                 help_text="Additional CSS properties as JSON (e.g., {'boxShadow': '0 2px 4px rgba(0,0,0,0.1)'})",
        #             ),
        #         ),
        #         ("is_active", models.BooleanField(default=True)),
        #         (
        #             "priority",
        #             models.IntegerField(
        #                 default=100,
        #                 help_text="Higher numbers = higher priority when multiple styles match",
        #             ),
        #         ),
        #         ("description", models.TextField(blank=True)),
        #         ("created_at", models.DateTimeField(auto_now_add=True)),
        #         ("updated_at", models.DateTimeField(auto_now=True)),
        #         (
        #             "theme",
        #             models.ForeignKey(
        #                 blank=True,
        #                 null=True,
        #                 on_delete=django.db.models.deletion.CASCADE,
        #                 related_name="styles",
        #                 to="rules_engine.contentstyletheme",
        #             ),
        #         ),
        #     ],
        #     options={
        #         "verbose_name": "Content Style",
        #         "verbose_name_plural": "Content Styles",
        #         "db_table": "acted_content_styles",
        #         "ordering": ["-priority", "name"],
        #     },
        # ),
        # migrations.CreateModel(
        #     name="HolidayCalendar",
        #     fields=[
        #         (
        #             "id",
        #             models.BigAutoField(
        #                 auto_created=True,
        #                 primary_key=True,
        #                 serialize=False,
        #                 verbose_name="ID",
        #             ),
        #         ),
        #         ("name", models.CharField(max_length=100)),
        #         ("date", models.DateField()),
        #         (
        #             "country",
        #             models.CharField(
        #                 default="GB", help_text="ISO country code", max_length=2
        #             ),
        #         ),
        #         ("is_business_day", models.BooleanField(default=False)),
        #         (
        #             "delivery_delay_days",
        #             models.IntegerField(
        #                 default=0,
        #                 help_text="Additional delivery delay for this holiday",
        #             ),
        #         ),
        #         ("created_at", models.DateTimeField(auto_now_add=True)),
        #     ],
        #     options={
        #         "verbose_name": "Holiday",
        #         "verbose_name_plural": "Holiday Calendar",
        #         "db_table": "acted_holiday_calendar",
        #         "unique_together": {("date", "country")},
        #     },
        # ),
        # migrations.CreateModel(
        #     name="MessageTemplateStyle",
        #     fields=[
        #         (
        #             "id",
        #             models.BigAutoField(
        #                 auto_created=True,
        #                 primary_key=True,
        #                 serialize=False,
        #                 verbose_name="ID",
        #             ),
        #         ),
        #         (
        #             "custom_styles",
        #             models.ManyToManyField(
        #                 blank=True,
        #                 help_text="Override specific styles for this template",
        #                 to="rules_engine.contentstyle",
        #             ),
        #         ),
        #         (
        #             "message_template",
        #             models.OneToOneField(
        #                 on_delete=django.db.models.deletion.CASCADE,
        #                 related_name="style_config",
        #                 to="rules_engine.messagetemplate",
        #             ),
        #         ),
        #         (
        #             "theme",
        #             models.ForeignKey(
        #                 blank=True,
        #                 null=True,
        #                 on_delete=django.db.models.deletion.SET_NULL,
        #                 to="rules_engine.contentstyletheme",
        #             ),
        #         ),
        #     ],
        #     options={
        #         "verbose_name": "Message Template Style",
        #         "verbose_name_plural": "Message Template Styles",
        #         "db_table": "acted_message_template_styles",
        #     },
        # ),
        # migrations.CreateModel(
        #     name="UserAcknowledgment",
        #     fields=[
        #         (
        #             "id",
        #             models.BigAutoField(
        #                 auto_created=True,
        #                 primary_key=True,
        #                 serialize=False,
        #                 verbose_name="ID",
        #             ),
        #         ),
        #         (
        #             "acknowledgment_type",
        #             models.CharField(
        #                 choices=[
        #                     ("required", "Required Acknowledgment"),
        #                     ("optional", "Optional Selection"),
        #                     ("preference", "User Preference"),
        #                 ],
        #                 default="required",
        #                 max_length=20,
        #             ),
        #         ),
        #         (
        #             "is_selected",
        #             models.BooleanField(
        #                 default=False,
        #                 help_text="For optional rules, whether user selected this option",
        #             ),
        #         ),
        #         ("acknowledged_at", models.DateTimeField(auto_now_add=True)),
        #         ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
        #         ("user_agent", models.TextField(blank=True)),
        #         (
        #             "session_data",
        #             models.JSONField(
        #                 default=dict, help_text="Additional session context"
        #             ),
        #         ),
        #         (
        #             "message_template",
        #             models.ForeignKey(
        #                 blank=True,
        #                 null=True,
        #                 on_delete=django.db.models.deletion.CASCADE,
        #                 to="rules_engine.messagetemplate",
        #             ),
        #         ),
        #         (
        #             "rule",
        #             models.ForeignKey(
        #                 on_delete=django.db.models.deletion.CASCADE,
        #                 to="rules_engine.actedrule",
        #             ),
        #         ),
        #         (
        #             "user",
        #             models.ForeignKey(
        #                 on_delete=django.db.models.deletion.CASCADE,
        #                 to=settings.AUTH_USER_MODEL,
        #             ),
        #         ),
        #     ],
        #     options={
        #         "verbose_name": "User Acknowledgment",
        #         "verbose_name_plural": "User Acknowledgments",
        #         "db_table": "acted_rules_user_acknowledgments",
        #         "unique_together": {("user", "rule", "message_template")},
        #     },
        # ),
    ]
