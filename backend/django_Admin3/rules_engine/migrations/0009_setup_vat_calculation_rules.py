# Generated by Django 5.2.2 on 2025-10-07 14:09

from django.db import migrations


def create_vat_rules(apps, schema_editor):
    """Create VAT calculation rules for cart and checkout entry points."""
    ActedRule = apps.get_model('rules_engine', 'ActedRule')

    # Rule 1: Calculate VAT for Cart View
    ActedRule.objects.create(
        rule_code='vat_calculation_cart_view',
        name='VAT Calculation - Cart View',
        description='Automatically calculate VAT for all items in the cart based on user billing country',
        entry_point='cart_view',
        priority=50,
        active=True,
        version=1,
        rules_fields_code='',
        condition={
            "type": "always_true"
        },
        actions=[
            {
                "type": "calculate",
                "id": "vat_cart_calculation",
                "function_name": "calculate_vat_for_context",
                "description": "Calculate VAT for cart items",
                "store_result_in": "vat_calculation"
            }
        ],
        stop_processing=False,
        metadata={
            "category": "vat_calculation",
            "purpose": "Calculate VAT for cart display",
            "created_by": "system",
            "notes": "Uses calculate_vat_for_context custom function"
        }
    )

    # Rule 2: Calculate VAT for Checkout
    ActedRule.objects.create(
        rule_code='vat_calculation_checkout',
        name='VAT Calculation - Checkout',
        description='Calculate VAT for checkout process based on billing country',
        entry_point='checkout_start',
        priority=10,
        active=True,
        version=1,
        rules_fields_code='',
        condition={
            "type": "always_true"
        },
        actions=[
            {
                "type": "calculate",
                "id": "vat_checkout_calculation",
                "function_name": "calculate_vat_for_context",
                "description": "Calculate VAT for checkout",
                "store_result_in": "vat_calculation",
                "required": True
            }
        ],
        stop_processing=False,
        metadata={
            "category": "vat_calculation",
            "purpose": "Calculate VAT for checkout total",
            "created_by": "system",
            "notes": "Uses calculate_vat_for_context custom function"
        }
    )

    # Rule 3: Calculate VAT for Order Summary
    ActedRule.objects.create(
        rule_code='vat_calculation_order_summary',
        name='VAT Calculation - Order Summary',
        description='Calculate and display VAT in order summary',
        entry_point='order_summary',
        priority=20,
        active=True,
        version=1,
        rules_fields_code='',
        condition={
            "type": "always_true"
        },
        actions=[
            {
                "type": "calculate",
                "id": "vat_order_calculation",
                "function_name": "calculate_vat_for_context",
                "description": "Calculate VAT for order",
                "store_result_in": "vat_calculation"
            }
        ],
        stop_processing=False,
        metadata={
            "category": "vat_calculation",
            "purpose": "Calculate VAT for order confirmation",
            "created_by": "system",
            "notes": "Uses calculate_vat_for_context custom function"
        }
    )

    print("Created 3 VAT calculation rules")


def reverse_vat_rules(apps, schema_editor):
    """Remove VAT calculation rules."""
    ActedRule = apps.get_model('rules_engine', 'ActedRule')

    rule_codes = [
        'vat_calculation_cart_view',
        'vat_calculation_checkout',
        'vat_calculation_order_summary'
    ]

    deleted_count = ActedRule.objects.filter(rule_code__in=rule_codes).delete()[0]
    print(f"Deleted {deleted_count} VAT calculation rules")


class Migration(migrations.Migration):

    dependencies = [
        ('rules_engine', '0008_actedruleexecution_acted_exec_rule_created'),
    ]

    operations = [
        migrations.RunPython(create_vat_rules, reverse_vat_rules),
    ]
