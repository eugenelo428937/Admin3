# Generated by Django 5.2.2 on 2025-07-15 22:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        (
            "products",
            "0009_rename_acted_filter_usage_analytics_filter_configuration_usage_count_idx_acted_filte_filter__0dbb6f_",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="productproductvariation",
            options={
                "verbose_name": "Product Product Variation",
                "verbose_name_plural": "Product Product Variations",
            },
        ),
        migrations.CreateModel(
            name="FilterGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("display_order", models.IntegerField(default=0)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="products.filtergroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Filter Group",
                "verbose_name_plural": "Filter Groups",
                "db_table": "acted_filter_group",
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="RefactoredFilterConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Internal name for the filter",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "display_label",
                    models.CharField(help_text="User-facing label", max_length=100),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description for admin users"
                    ),
                ),
                (
                    "filter_type",
                    models.CharField(
                        choices=[
                            ("subject", "Subject"),
                            ("filter_group", "Filter Group"),
                            ("product_variation", "Product Variation"),
                            ("tutorial_format", "Tutorial Format"),
                            ("custom_field", "Custom Field"),
                            ("computed", "Computed Filter"),
                            ("date_range", "Date Range"),
                            ("numeric_range", "Numeric Range"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "filter_key",
                    models.CharField(
                        help_text="Key used in API requests", max_length=50
                    ),
                ),
                (
                    "ui_component",
                    models.CharField(
                        choices=[
                            ("multi_select", "Multi-Select Checkboxes"),
                            ("single_select", "Single Select Dropdown"),
                            ("radio_buttons", "Radio Buttons"),
                            ("toggle_buttons", "Toggle Buttons"),
                            ("search_select", "Searchable Select"),
                            ("tree_select", "Hierarchical Tree Select"),
                            ("range_slider", "Range Slider"),
                            ("date_picker", "Date Picker"),
                            ("tag_input", "Tag Input"),
                        ],
                        default="multi_select",
                        max_length=32,
                    ),
                ),
                (
                    "display_order",
                    models.IntegerField(
                        default=0, help_text="Order in which filters appear"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_collapsible", models.BooleanField(default=True)),
                ("is_expanded_by_default", models.BooleanField(default=False)),
                ("is_required", models.BooleanField(default=False)),
                ("allow_multiple", models.BooleanField(default=True)),
                (
                    "ui_config",
                    models.JSONField(
                        blank=True, default=dict, help_text="UI-specific configuration"
                    ),
                ),
                (
                    "validation_rules",
                    models.JSONField(
                        blank=True, default=dict, help_text="Validation rules"
                    ),
                ),
                (
                    "dependency_rules",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Dependencies on other filters",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Refactored Filter Configuration",
                "verbose_name_plural": "Refactored Filter Configurations",
                "db_table": "acted_filter_configuration",
                "ordering": ["display_order", "display_label"],
            },
        ),
        migrations.CreateModel(
            name="RefactoredFilterConfigurationGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Is this a default option for the filter?",
                    ),
                ),
                (
                    "display_order",
                    models.IntegerField(
                        default=0, help_text="Order within this filter"
                    ),
                ),
                (
                    "filter_configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.refactoredfilterconfiguration",
                    ),
                ),
                (
                    "filter_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.filtergroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Refactored Filter Configuration Group",
                "verbose_name_plural": "Refactored Filter Configuration Groups",
                "db_table": "acted_filter_configuration_group",
                "ordering": ["display_order", "filter_group__name"],
                "unique_together": {("filter_configuration", "filter_group")},
            },
        ),
        migrations.AddField(
            model_name="refactoredfilterconfiguration",
            name="filter_groups",
            field=models.ManyToManyField(
                blank=True,
                through="products.RefactoredFilterConfigurationGroup",
                to="products.filtergroup",
            ),
        ),
        migrations.CreateModel(
            name="RefactoredFilterPreset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "filter_values",
                    models.JSONField(default=dict, help_text="Saved filter values"),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="Available to all users"
                    ),
                ),
                ("usage_count", models.IntegerField(default=0)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Refactored Filter Preset",
                "verbose_name_plural": "Refactored Filter Presets",
                "db_table": "acted_filter_preset",
                "ordering": ["-usage_count", "name"],
            },
        ),
        migrations.CreateModel(
            name="RefactoredFilterUsageAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "filter_value",
                    models.CharField(
                        help_text="The actual filter value used", max_length=100
                    ),
                ),
                ("usage_count", models.IntegerField(default=0)),
                ("last_used", models.DateTimeField(auto_now=True)),
                (
                    "session_id",
                    models.CharField(
                        blank=True,
                        help_text="Session ID for anonymous users",
                        max_length=100,
                    ),
                ),
                (
                    "filter_configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.refactoredfilterconfiguration",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Refactored Filter Usage Analytics",
                "verbose_name_plural": "Refactored Filter Usage Analytics",
                "db_table": "acted_filter_usage_analytics",
                "indexes": [
                    models.Index(
                        fields=["filter_configuration", "-usage_count"],
                        name="acted_refac_filter__06283c_idx",
                    ),
                    models.Index(
                        fields=["last_used"], name="acted_refac_last_us_a9c1a2_idx"
                    ),
                ],
                "unique_together": {("filter_configuration", "filter_value")},
            },
        ),
    ]
