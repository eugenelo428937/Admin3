# Generated by Django 5.2.2 on 2025-09-11 11:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("subjects", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fullname", models.CharField(max_length=255)),
                ("shortname", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("code", models.CharField(max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("buy_both", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "db_table": "acted_products",
                "ordering": ["shortname"],
            },
        ),
        migrations.CreateModel(
            name="FilterConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Internal name for the filter",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "display_label",
                    models.CharField(help_text="User-facing label", max_length=100),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description for admin users"
                    ),
                ),
                (
                    "filter_type",
                    models.CharField(
                        choices=[
                            ("subject", "Subject"),
                            ("filter_group", "Filter Group"),
                            ("product_variation", "Product Variation"),
                            ("tutorial_format", "Tutorial Format"),
                            ("bundle", "Bundle"),
                            ("custom_field", "Custom Field"),
                            ("computed", "Computed Filter"),
                            ("date_range", "Date Range"),
                            ("numeric_range", "Numeric Range"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "filter_key",
                    models.CharField(
                        help_text="Key used in API requests", max_length=50
                    ),
                ),
                (
                    "ui_component",
                    models.CharField(
                        choices=[
                            ("multi_select", "Multi-Select Checkboxes"),
                            ("single_select", "Single Select Dropdown"),
                            ("checkbox", "Single Checkbox"),
                            ("radio_buttons", "Radio Buttons"),
                            ("toggle_buttons", "Toggle Buttons"),
                            ("search_select", "Searchable Select"),
                            ("tree_select", "Hierarchical Tree Select"),
                            ("range_slider", "Range Slider"),
                            ("date_picker", "Date Picker"),
                            ("tag_input", "Tag Input"),
                        ],
                        default="multi_select",
                        max_length=32,
                    ),
                ),
                (
                    "display_order",
                    models.IntegerField(
                        default=0, help_text="Order in which filters appear"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_collapsible", models.BooleanField(default=True)),
                ("is_expanded_by_default", models.BooleanField(default=False)),
                ("is_required", models.BooleanField(default=False)),
                ("allow_multiple", models.BooleanField(default=True)),
                (
                    "ui_config",
                    models.JSONField(
                        blank=True, default=dict, help_text="UI-specific configuration"
                    ),
                ),
                (
                    "validation_rules",
                    models.JSONField(
                        blank=True, default=dict, help_text="Validation rules"
                    ),
                ),
                (
                    "dependency_rules",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Dependencies on other filters",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Filter Configuration",
                "verbose_name_plural": "Filter Configurations",
                "db_table": "acted_filter_configuration",
                "ordering": ["display_order", "display_label"],
            },
        ),
        migrations.CreateModel(
            name="FilterGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("display_order", models.IntegerField(default=0)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="products.filtergroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Filter Group",
                "verbose_name_plural": "Filter Groups",
                "db_table": "acted_filter_group",
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="FilterConfigurationGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Is this a default option for the filter?",
                    ),
                ),
                (
                    "display_order",
                    models.IntegerField(
                        default=0, help_text="Order within this filter"
                    ),
                ),
                (
                    "filter_configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.filterconfiguration",
                    ),
                ),
                (
                    "filter_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.filtergroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Filter Configuration Group",
                "verbose_name_plural": "Filter Configuration Groups",
                "db_table": "acted_filter_configuration_group",
                "ordering": ["display_order", "filter_group__name"],
                "unique_together": {("filter_configuration", "filter_group")},
            },
        ),
        migrations.AddField(
            model_name="filterconfiguration",
            name="filter_groups",
            field=models.ManyToManyField(
                blank=True,
                through="products.FilterConfigurationGroup",
                to="products.filtergroup",
            ),
        ),
        migrations.CreateModel(
            name="FilterPreset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "filter_values",
                    models.JSONField(default=dict, help_text="Saved filter values"),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="Available to all users"
                    ),
                ),
                ("usage_count", models.IntegerField(default=0)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Filter Preset",
                "verbose_name_plural": "Filter Presets",
                "db_table": "acted_filter_preset",
                "ordering": ["-usage_count", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProductBundle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bundle_name",
                    models.CharField(
                        help_text="Name of the bundle (e.g., 'CM1 Materials & Marking Bundle')",
                        max_length=255,
                    ),
                ),
                (
                    "bundle_description",
                    models.TextField(
                        blank=True,
                        help_text="Description of what's included in the bundle",
                        null=True,
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to feature this bundle prominently",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this bundle is currently available",
                    ),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order in which to display this bundle"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subject",
                    models.ForeignKey(
                        help_text="Subject this bundle is for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bundles",
                        to="subjects.subject",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Bundle",
                "verbose_name_plural": "Product Bundles",
                "db_table": "acted_product_bundles",
                "ordering": ["subject__code", "display_order", "bundle_name"],
            },
        ),
        migrations.CreateModel(
            name="ProductGroupFilter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "filter_type",
                    models.CharField(
                        choices=[
                            ("type", "Product Type"),
                            ("delivery", "Delivery Method"),
                            ("custom", "Custom"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="filter_groups", to="products.filtergroup"
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Group Filter",
                "verbose_name_plural": "Product Group Filters",
                "db_table": "acted_product_group_filter",
            },
        ),
        migrations.CreateModel(
            name="ProductProductGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                    ),
                ),
                (
                    "product_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.filtergroup",
                    ),
                ),
            ],
            options={
                "db_table": "acted_product_productgroup",
                "unique_together": {("product", "product_group")},
            },
        ),
        migrations.AddField(
            model_name="product",
            name="groups",
            field=models.ManyToManyField(
                related_name="products",
                through="products.ProductProductGroup",
                to="products.filtergroup",
            ),
        ),
        migrations.CreateModel(
            name="ProductProductVariation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Product Variation",
                "verbose_name_plural": "Product Product Variations",
                "db_table": "acted_product_productvariation",
            },
        ),
        migrations.CreateModel(
            name="ProductBundleProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "default_price_type",
                    models.CharField(
                        choices=[
                            ("standard", "Standard"),
                            ("retaker", "Retaker"),
                            ("additional", "Additional Copy"),
                        ],
                        default="standard",
                        help_text="Default price type for this product when added via bundle",
                        max_length=20,
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Number of this product to add when bundle is selected",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order of this product within the bundle",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this product is currently active in the bundle",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "bundle",
                    models.ForeignKey(
                        help_text="The bundle this product belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bundle_products",
                        to="products.productbundle",
                    ),
                ),
                (
                    "product_product_variation",
                    models.ForeignKey(
                        help_text="The specific product-variation combination included in the bundle",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.productproductvariation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bundle Product",
                "verbose_name_plural": "Bundle Products",
                "db_table": "acted_product_bundle_products",
                "ordering": [
                    "sort_order",
                    "product_product_variation__product__shortname",
                ],
                "unique_together": {("bundle", "product_product_variation")},
            },
        ),
        migrations.AddField(
            model_name="productbundle",
            name="product_variations",
            field=models.ManyToManyField(
                help_text="Product variations included in this bundle",
                related_name="bundles",
                through="products.ProductBundleProduct",
                to="products.productproductvariation",
            ),
        ),
        migrations.CreateModel(
            name="ProductVariation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "variation_type",
                    models.CharField(
                        choices=[
                            ("eBook", "eBook"),
                            ("Hub", "Hub"),
                            ("Printed", "Printed"),
                            ("Marking", "Marking"),
                            ("Tutorial", "Tutorial"),
                        ],
                        max_length=32,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "description_short",
                    models.CharField(
                        blank=True,
                        help_text="Short description for display purposes",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "code",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
            ],
            options={
                "verbose_name": "Product Variation",
                "verbose_name_plural": "Product Variations",
                "db_table": "acted_product_variations",
                "unique_together": {("variation_type", "name")},
            },
        ),
        migrations.AddField(
            model_name="productproductvariation",
            name="product_variation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="products.productvariation",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_variations",
            field=models.ManyToManyField(
                blank=True,
                related_name="products",
                through="products.ProductProductVariation",
                to="products.productvariation",
            ),
        ),
        migrations.CreateModel(
            name="FilterUsageAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "filter_value",
                    models.CharField(
                        help_text="The actual filter value used", max_length=100
                    ),
                ),
                ("usage_count", models.IntegerField(default=0)),
                ("last_used", models.DateTimeField(auto_now=True)),
                (
                    "session_id",
                    models.CharField(
                        blank=True,
                        help_text="Session ID for anonymous users",
                        max_length=100,
                    ),
                ),
                (
                    "filter_configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.filterconfiguration",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Filter Usage Analytics",
                "verbose_name_plural": "Filter Usage Analytics",
                "db_table": "acted_filter_usage_analytics",
                "indexes": [
                    models.Index(
                        fields=["filter_configuration", "-usage_count"],
                        name="acted_filte_filter__0dbb6f_idx",
                    ),
                    models.Index(
                        fields=["last_used"], name="acted_filte_last_us_ec5d9c_idx"
                    ),
                ],
                "unique_together": {("filter_configuration", "filter_value")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="productbundle",
            unique_together={("subject", "bundle_name")},
        ),
        migrations.AlterUniqueTogether(
            name="productproductvariation",
            unique_together={("product", "product_variation")},
        ),
    ]
