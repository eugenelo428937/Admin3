# Generated by Django 5.2.2 on 2025-07-16 09:32

from django.db import migrations


def update_product_group_foreign_key(apps, schema_editor):
    """Update the foreign key constraint from ProductGroup to FilterGroup"""
    from django.db import connection
    
    with connection.cursor() as cursor:
        try:
            # First, find the current foreign key constraint name
            cursor.execute("""
                SELECT conname 
                FROM pg_constraint 
                WHERE conrelid = (SELECT oid FROM pg_class WHERE relname = 'acted_product_productgroup')
                AND confrelid = (SELECT oid FROM pg_class WHERE relname = 'acted_product_group')
            """)
            
            fk_constraint = cursor.fetchone()
            if fk_constraint:
                constraint_name = fk_constraint[0]
                print(f"Found constraint: {constraint_name}")
                
                # Drop the old foreign key constraint
                cursor.execute(f"ALTER TABLE acted_product_productgroup DROP CONSTRAINT {constraint_name};")
                print("Dropped old foreign key constraint")
                
                # Add new foreign key constraint pointing to acted_filter_group
                cursor.execute("""
                    ALTER TABLE acted_product_productgroup 
                    ADD CONSTRAINT acted_product_productgroup_product_group_id_fkey 
                    FOREIGN KEY (product_group_id) 
                    REFERENCES acted_filter_group (id) 
                    DEFERRABLE INITIALLY DEFERRED;
                """)
                print("Added new foreign key constraint to acted_filter_group")
            else:
                print("No foreign key constraint found")
                
        except Exception as e:
            print(f"Error updating foreign key: {e}")
            raise


def reverse_product_group_foreign_key(apps, schema_editor):
    """Reverse the foreign key constraint back to ProductGroup"""
    from django.db import connection
    
    with connection.cursor() as cursor:
        try:
            # Drop the new foreign key constraint
            cursor.execute("""
                ALTER TABLE acted_product_productgroup 
                DROP CONSTRAINT acted_product_productgroup_product_group_id_fkey;
            """)
            
            # Add back the old foreign key constraint
            cursor.execute("""
                ALTER TABLE acted_product_productgroup 
                ADD CONSTRAINT acted_product_productgroup_product_group_id_fkey 
                FOREIGN KEY (product_group_id) 
                REFERENCES acted_product_group (id) 
                DEFERRABLE INITIALLY DEFERRED;
            """)
            print("Restored foreign key constraint to acted_product_group")
            
        except Exception as e:
            print(f"Error reversing foreign key: {e}")
            raise


class Migration(migrations.Migration):

    dependencies = [
        ("products", "0012_rename_filter_tables"),
    ]

    operations = [
        migrations.RunPython(
            update_product_group_foreign_key,
            reverse_product_group_foreign_key,
        ),
    ]
