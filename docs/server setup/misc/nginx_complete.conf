worker_processes 1;
error_log "C:/nginx/nginx-1.29.0/logs/error.log";
pid "C:/nginx/nginx-1.29.0/logs/nginx.pid";

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    access_log "C:/nginx/nginx-1.29.0/logs/access.log";

    # Define temp directories for Windows
    client_body_temp_path "C:/nginx/nginx-1.29.0/temp/client_body_temp";
    proxy_temp_path "C:/nginx/nginx-1.29.0/temp/proxy_temp";
    fastcgi_temp_path "C:/nginx/nginx-1.29.0/temp/fastcgi_temp";
    uwsgi_temp_path "C:/nginx/nginx-1.29.0/temp/uwsgi_temp";
    scgi_temp_path "C:/nginx/nginx-1.29.0/temp/scgi_temp";

    # Enable HTTP/2 globally
    http2 on;

    # Upstream definitions
    upstream django_backend {
        server 127.0.0.1:8888;
    }

    upstream react_frontend {
        server 127.0.0.1:3000;
    }

    # HTTPS Server on standard port 443
    server {
        listen 443 ssl;
        server_name ec2-35-176-108-52.eu-west-2.compute.amazonaws.com 35.176.108.52 localhost;

        # SSL Configuration - use absolute Windows paths
        ssl_certificate "C:/nginx/nginx-1.29.0/conf/ssl/server.crt";
        ssl_certificate_key "C:/nginx/nginx-1.29.0/conf/ssl/server.key";
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # API requests to Django backend
        location /api/ {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Handle CORS preflight requests
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
                add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization, X-Requested-With";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
            }
        }

        # Django admin interface
        location /admin/ {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files for Django
        location /static/ {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Everything else to React frontend
        location / {
            proxy_pass http://react_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for React development server
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Handle React Router (SPA routing)
            try_files $uri $uri/ @react;
        }

        # Fallback for React Router
        location @react {
            proxy_pass http://react_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 8080;
        server_name ec2-35-176-108-52.eu-west-2.compute.amazonaws.com 35.176.108.52 localhost;
        return 301 https://$server_name$request_uri;
    }
}